{"version":3,"sources":["../src/transform.ts"],"names":["gm","GraphicsMagick","subClass","imageMagick","transform","imageStream","transforms","state","forEach","params","width","height","crop","resize","gravity","extent","undefined"],"mappings":";;;;;;;AAIA;;;;AAJA;;;AAOA,IAAMA,EAAE,GAAGC,eAAeC,QAAf,CAAwB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAxB,CAAX;AAEA;;;;;AAGO,SAASC,SAAT,CACLC,WADK,EAELC,UAFK,EAGiB;AACtB,MAAIC,KAAK,GAAGP,EAAE,CAACK,WAAD,CAAd;AAEAC,EAAAA,UAAU,CAACE,OAAX,CAAmB,UAACC,MAAD,EAAY;AAC7B,QAAIA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACE,MAA3B,EAAmC;AACjC,UAAIF,MAAM,CAACG,IAAP,KAAgB,MAApB,EAA4B;AAC1BL,QAAAA,KAAK,GAAGA,KAAK,CACVM,MADK,CACEJ,MAAM,CAACC,KADT,EACgBD,MAAM,CAACE,MADvB,EAC+B,GAD/B,EAELG,OAFK,CAEG,QAFH,EAGLC,MAHK,CAGEN,MAAM,CAACC,KAHT,EAGgBD,MAAM,CAACE,MAHvB,CAAR;AAID,OALD,MAKO;AACLJ,QAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAaJ,MAAM,CAACC,KAApB,EAA2BD,MAAM,CAACE,MAAlC,EAA0C,GAA1C,CAAR;AACD;AACF,KATD,MASO,IAAIF,MAAM,CAACC,KAAX,EAAkB;AACvBH,MAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAaJ,MAAM,CAACC,KAApB,EAA2BM,SAA3B,CAAR;AACD,KAFM,MAEA,IAAIP,MAAM,CAACE,MAAX,EAAmB;AACxB;;AACA;AACAJ,MAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAaG,SAAb,EAAwBP,MAAM,CAACE,MAA/B,CAAR;AACD;AACF,GAjBD;AAmBA,SAAOJ,KAAP;AACD","sourcesContent":["/**\n * Copyright (c) 2020-present Kriasoft | MIT License (https://git.io/JUgVL)\n */\n\nimport GraphicsMagick from \"gm\";\nimport type { Transform } from \"./types\";\n\nconst gm = GraphicsMagick.subClass({ imageMagick: true });\n\n/**\n * Transforms an image stream using {@link https://github.com/aheckmann/gm#readme|ImageMagick}.\n */\nexport function transform(\n  imageStream: NodeJS.ReadableStream,\n  transforms: Transform[],\n): GraphicsMagick.State {\n  let state = gm(imageStream);\n\n  transforms.forEach((params) => {\n    if (params.width && params.height) {\n      if (params.crop === \"fill\") {\n        state = state\n          .resize(params.width, params.height, \"^\")\n          .gravity(\"Center\")\n          .extent(params.width, params.height);\n      } else {\n        state = state.resize(params.width, params.height, \"!\");\n      }\n    } else if (params.width) {\n      state = state.resize(params.width, undefined);\n    } else if (params.height) {\n      /* eslint-disable-next-line @typescript-eslint/ban-ts-comment */\n      /* @ts-ignore */\n      state = state.resize(undefined, params.height);\n    }\n  });\n\n  return state;\n}\n"],"file":"transform.js"}